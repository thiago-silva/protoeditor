// This file is generated by kconfig_compiler from sitesettings.kcfg.
// All changes you do to this file will be lost.

#include "sitesettings.h"

SiteSettings::SiteSettings(const QString &number)
  : KConfigSkeleton( QString::fromLatin1( "protoeditorrc" ) )
  , mParamnumber(number)
{
  setCurrentGroup( QString::fromLatin1( "Site_%1" ).arg( mParamnumber ) );

  KConfigSkeleton::ItemString  *itemName;
  itemName = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Name" ), mName );
  addItem( itemName, QString::fromLatin1( "Name" ) );
  KConfigSkeleton::ItemString  *itemHost;
  itemHost = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "Host" ), mHost );
  addItem( itemHost, QString::fromLatin1( "Host" ) );
  KConfigSkeleton::ItemInt  *itemPort;
  itemPort = new KConfigSkeleton::ItemInt( currentGroup(), QString::fromLatin1( "Port" ), mPort, 80 );
  addItem( itemPort, QString::fromLatin1( "Port" ) );
  KConfigSkeleton::ItemPath  *itemLocalBaseDir;
  itemLocalBaseDir = new KConfigSkeleton::ItemPath( currentGroup(), QString::fromLatin1( "LocalBaseDir" ), mLocalBaseDir );
  addItem( itemLocalBaseDir, QString::fromLatin1( "LocalBaseDir" ) );
  KConfigSkeleton::ItemPath  *itemRemoteBaseDir;
  itemRemoteBaseDir = new KConfigSkeleton::ItemPath( currentGroup(), QString::fromLatin1( "RemoteBaseDir" ), mRemoteBaseDir );
  addItem( itemRemoteBaseDir, QString::fromLatin1( "RemoteBaseDir" ) );

  KConfigSkeleton::ItemBool  *itemMatchFileInLowerCase;
  itemMatchFileInLowerCase = new KConfigSkeleton::ItemBool( currentGroup(), QString::fromLatin1( "MatchFileInLowerCase" ), mMatchFileInLowerCase, false );
  addItem( itemMatchFileInLowerCase, QString::fromLatin1( "MatchFileInLowerCase" ) );

  KConfigSkeleton::ItemString  *itemDebuggerClient;
  itemDebuggerClient = new KConfigSkeleton::ItemString( currentGroup(), QString::fromLatin1( "DebuggerClient" ), mDebuggerClient, "DBG" );
  addItem( itemDebuggerClient, QString::fromLatin1( "DebuggerClient" ) );

  readConfig();
}


void SiteSettings::load(const QString& name, const QString& host, int port,
     const QString& remoteBaseDir, const QString& localBaseDir, bool matchFileInLowerCase,
     const QString& debuggerClient)
{
  mName = name;
  mHost = host;
  mPort = port;
  mRemoteBaseDir = remoteBaseDir;
  mLocalBaseDir = localBaseDir;
  mMatchFileInLowerCase = matchFileInLowerCase;
  mDebuggerClient = debuggerClient;
}

SiteSettings::~SiteSettings()
{
}

